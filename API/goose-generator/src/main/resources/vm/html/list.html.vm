<!DOCTYPE HTML>
<html lang="zh" xmlns:th="http://www.thymeleaf.org" xmlns:shiro="http://www.pollix.at/thymeleaf/shiro">
<meta charset="utf-8">
<head th:include="include :: header"></head>
<body class="gray-bg">
    
     <div class="container-div">
		<div class="row">
			<div class="col-sm-12 search-collapse">
				<form id="formId">
					<div class="select-list">
						<ul>
#foreach($column in $columns)
#if($column.columnName != $primaryKey.columnName && $column.configInfo.searchable == 1)
#if(${column.configInfo.fkTable} and ${column.configInfo.fkInputMethod} == "select")
							<li>
								${column.columnComment}：
								<select id="${column.attrname}" name="${column.attrname}" >
									<option value="">所有</option>
									<option th:each="fkRow:${ ${column.attrname}List}" th:value="${ fkRow.${column.refAttrname}}" th:text="${ fkRow.${column.refDisplayAttrname}}"></option>
								</select>
							</li>
 
#elseif(${column.configInfo.type} == "dict")
							<li>
								${column.columnComment}：<select name="${column.attrname}" th:with="type=${@dict.getType('${column.configInfo.value}')}">
									<option value="">所有</option>
									<option th:each="dict : ${type}" th:text="${dict.dictLabel}" th:value="${dict.dictValue}"></option>
								</select>
							</li>
#elseif(${column.configInfo.type} == "date" or ${column.attrType} == "Date")
							<li class="select-time">
								<label>${column.columnComment}： </label>
								<input type="text" class="time-input" id="startTime" placeholder="开始" name="params[beginTime]"/>
								<span>-</span>
								<input type="text" class="time-input" id="endTime" placeholder="结束" name="params[endTime]"/>
							</li>
#elseif(${column.configInfo.type} == "fk")		
#else
							<li>
								${column.columnComment}：<input type="text" name="${column.attrname}"/>
							</li>
#end
#end
#end
							<li>
								<a class="btn btn-primary btn-rounded btn-sm" onclick="$.table.search()"><i class="fa fa-search"></i>&nbsp;搜索</a>
								<a class="btn btn-warning btn-rounded btn-sm" onclick="$.form.reset()"><i class="fa fa-refresh"></i>&nbsp;重置</a>
							</li>
						</ul>
					</div>
				</form>
			</div>
			
	        <div class="btn-group-sm hidden-xs" id="toolbar" role="group">
				<a class="btn btn-success" onclick="$.operate.add()" shiro:hasPermission="${moduleName}:${classname}:add">
					<i class="fa fa-plus"></i> 添加
				</a>
				<a class="btn btn-primary btn-edit disabled" onclick="$.operate.edit()" shiro:hasPermission="${moduleName}:${classname}:edit">
					<i class="fa fa-edit"></i> 修改
				</a>
				<a class="btn btn-danger btn-del btn-del disabled" onclick="$.operate.removeAll()" shiro:hasPermission="${moduleName}:${classname}:remove">
					<i class="fa fa-remove"></i> 删除
				</a>
				<a class="btn btn-warning" onclick="$.table.exportExcel()" shiro:hasPermission="${moduleName}:${classname}:export">
						<i class="fa fa-download"></i> 导出
				 </a>
			</div>
			<div class="col-sm-12 select-table table-striped">
				<table id="bootstrap-table" data-mobile-responsive="true"></table>
			</div>
		</div>
	</div>
    <div th:include="include :: footer"></div>
    <script th:inline="javascript">
        var editFlag = [[${@permission.hasPermi('${moduleName}:${classname}:edit')}]];
        var removeFlag = [[${@permission.hasPermi('${moduleName}:${classname}:remove')}]];
        var prefix = ctx + "${moduleName}/${classname}";
#foreach($column in $columns)
#if(${column.configInfo} && ${column.configInfo.type} == 'dict')
        var datas_${column.configInfo.value} = [[${@dict.getType('${column.configInfo.value}')}]];
#end
#end


        $(function() {
            var options = {
                url: prefix + "/list",
                createUrl: prefix + "/add",
                updateUrl: prefix + "/edit/{id}",
                removeUrl: prefix + "/remove",
				exportUrl: prefix + "/export",
                modalName: "${tableComment}",
				search: false,
		        showExport: true,
                columns: [{
		            checkbox: true
		        },
#foreach($column in $columns)
#if($column.columnName == $primaryKey.columnName)
				{
					field : '${column.attrname}', 
					title : '${column.columnComment}',
					visible: false
				},
#elseif($column.columnName != $primaryKey.columnName)
#if(${column.configInfo.fkTable} and ${column.configInfo.fkInputMethod} == "select")
				{
#foreach ($fk in $foreignKeyColumns)
#if(${column.columnName} == ${fk.columnName})
					field : '${fk.attrname}.${column.refDisplayAttrname}',
#end
#end 					  						 
					title : '${column.columnComment}',
					sortable: false
				},
#elseif(${column.configInfo} && ${column.configInfo.type} == 'dict')
				{
					field : '${column.attrname}', 
					title : '${column.columnComment}',
					sortable: true,
					formatter: function(value, row, index) {
		            	return $.table.selectDictLabel(datas_${column.configInfo.value}, value);
		            }
				},
#else
				{
					field : '${column.attrname}', 
					title : '${column.columnComment}',
#if(${column.configInfo.ellipsisText} == "1" || ${column.configInfo.richEditor} != "0")					
					sortable: true,
					visible: false,					
					formatter: function(value, row, index) {
						value = ellipsisText(value.replace(/<[^>]*>/g, ''), 40)
		            	return value
		            }
#elseif(${column.configInfo.uploadPic} == 1)					
					sortable: false,
					visible: false,
					formatter: function(value, row, index) {
						let isNetworkPic=value!=null&&(value.startsWith("https://")||value.startsWith("http://"));
#if(${adminOwner} == 1)
						#set ( $d = "$")						
						let pic=isNetworkPic?value:'/${moduleName}/picture/${d}{row.${adminOwnerId}}/${value}'
#else
						let pic=isNetworkPic?value:'/${moduleName}/picture/${value}'
#end
		            	return `<img src="${pic}" width="50px"></img>`;		            	
		            }		         						
#else

					sortable: true
#end
				},
#end
#end				
#end
		        {
		            title: '操作',
		            align: 'center',
		            formatter: function(value, row, index) {
		            	var actions = [];
		            	actions.push('<a class="btn btn-success btn-xs ' + editFlag + '" href="#" onclick="$.operate.edit(\'' + row.${primaryKey.attrname} + '\')"><i class="fa fa-edit"></i>编辑</a> ');
                        actions.push('<a class="btn btn-danger btn-xs ' + removeFlag + '" href="#" onclick="$.operate.remove(\'' + row.${primaryKey.attrname} + '\')"><i class="fa fa-remove"></i>删除</a>');
						return actions.join('');
		            }
		        }]
            };
            $.table.init(options);
        });
#foreach($column in $columns)
#if(${column.configInfo.ellipsisText} == "1" || ${column.configInfo.richEditor} != "0")	
    	function ellipsisText(str, size=100) {
    	    let truncatedText=str.length > size?str.substring(0,size) + '...':str;
    	    return truncatedText;	   
    	 }  
#break				
#end
#end        
        
    </script>
</body>
</html>