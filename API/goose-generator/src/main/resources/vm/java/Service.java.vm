package ${package}.service;

import ${package}.domain.${className};
import java.util.List;

/**
 * ${tableComment} 服务层
 * 
 * @author ${author}
 * @date ${datetime}
 */
public interface I${className}Service 
{
	/**
     * 查询${tableComment}信息
     * 
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
	public ${className} select${className}ById(${primaryKey.attrType} ${primaryKey.attrname});
	
	/**
     * 查询${tableComment}信息 外键关联
     * 
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
	public ${className} select${className}ByIdAssoc(${primaryKey.attrType} ${primaryKey.attrname});	
	
	/**
     * 查询所有${tableComment}列表
     * 
     * @param 
     * @return ${tableComment}集合
     */
	public List<${className}> select${className}All();		
	
	/**
     * 查询所有${tableComment}列表  外键关联
     * 
     * @param 
     * @return ${tableComment}集合
     */
	public List<${className}> select${className}AllAssoc();		
	
	/**
     * 查询${tableComment}列表
     * 
     * @param ${classname} ${tableComment}信息
     * @return ${tableComment}集合
     */
	public List<${className}> select${className}List(${className} ${classname});
	
	/**
     * 查询${tableComment}列表 外键关联
     * 
     * @param ${classname} ${tableComment}信息
     * @return ${tableComment}集合
     */
	public List<${className}> select${className}ListAssoc(${className} ${classname});	
	
	/**
     * 新增${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	public int insert${className}(${className} ${classname});
	
	/**
     * 修改${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	public int update${className}(${className} ${classname});
		
	/**
     * 删除${tableComment}信息
     * 
     * @param ids 需要删除的数据ID
     * @return 结果
     */
	public int delete${className}ByIds(String ids);
	
	/**
     * 删除${tableComment}信息
     * 
     * @param id 需要删除的数据ID
     * @return 结果
     */
	public int delete${className}ById(${primaryKey.attrType} ${primaryKey.attrname});
	
#foreach($column in $columns)
#if($column.configInfo.checkUnique == 1)	
    /**
     * 校验是否唯一
     * 
     * @param ${className}
     * @return 结果
     */
	public String check${column.attrName}Unique(${className} ${classname});	
#end
#end

  
}
